plot(Age, Height, main="Scatterplot", cex=0.5, cex.main=2, cex.lab=1.5)
plot(Age, Height, main="Scatterplot", cex=0.5, cex.main=2, cex.lab=1.5, cex.axis=0.7)
plot(Age, Height, main="Scatterplot")
plot(Age, Height, main="Scatterplot", font.main=3) # italicized
plot(Age, Height, main="Scatterplot", font.main=4) # bold, italicized
plot(Age, Height, main="Scatterplot", font.lab=2) # bold
plot(Age, Height, main="Scatterplot", font.axis=3) # italicized
plot(Age, Height, main="Scatterplot")
plot(Age, Height, main="Scatterplot", col=5) # 연한 파랑
plot(Age, Height, main="Scatterplot", col.main=4, col.lab=2, col.axis=3) # 2는 red, 3은 green, 4는 blue
plot(Age, Height, main="Scatterplot")
plot(Age, Height, main="Scatterplot", pch=2) # 2는 triangle
plot(Age, Height, main="Scatterplot", pch="w")
abline(lm(Height~Age)) # abline 단순회귀직선, lw = linear model
abline(lm(Height~Age), col=4, lty=2, lwd=6) # lty = line type, lwd = line width
plot(Age[Gender=="male"], Height[Gender=="male"], col=4, pch="m", xlab="Age", ylab="Height", main="Height vs Age")
plot(Age[Gender=="female"], Height[Gender=="female"], col=6, pch="f")
plot(Age[Gender=="male"], Height[Gender=="male"], col=4, pch="m", xlab="Age", ylab="Height", main="Height vs Age")
# add female
plot(Age[Gender=="female"], Height[Gender=="female"], col=6, pch="f")
par(mfrow=c(1,2))
plot(Age[Gender=="male"], Height[Gender=="male"], xlab="Age", ylab="Height", main="Height vs Age for Males", xlim=c(0, 20), ylim=c(45, 85))
plot(Age[Gender=="female"], Height[Gender=="female"], xlab="Age", ylab="Height", main="Height vs Age for Females", xlim=c(0, 20), ylim=c(45, 85))
par(mfrow=c(1,1))
plot(Age, Height, main="TITLE")
plot(Age, Height, main="TITLE", axes=F) # x축, y축 테두리, 레이블이 사라짐
axis(side=1, at=c(7, 12.3, 15), lables=c("sev", "mean", "15"))
axis(side=1, at=c(7, 12.3, 15), labels=c("sev", "mean", "15"))
plot(Age, Height, main="TITLE")
plot(Age, Height, main="TITLE", axes=F) # x축, y축 테두리, 레이블이 사라짐
axis(side=1, at=c(7, 12.3, 15), labels=c("sev", "mean", "15"))
axis(side=2, at=c(55, 65, 75), labels=c("55", "65", "75"))
box() # 테두리
axis(side=4, at=c(50, 60, 70), labels=c("50", "60", "70"))
LungCapData <- read.table(file.choose(), header=T, sep="\t")
attach(LungCapData)
names(LungCapData)
class(Smoke)
levels(Smoke)
help(legend)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"]), main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"]), main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4, xlab="Age", ylab="LungCap")
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2))
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4, xlab="Age", ylab="LungCap")
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2)
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2))
plot(Age[Smoke="no"], LungCap[Smoke="no"], col=4, xlab="Age", ylab="LungCap", pch=16) # blue solid circle
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke="no"], LungCap[Smoke="no"], col=4, xlab="Age", ylab="LungCap", pch=16) # blue solid circle
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2, pch=17) # red triangle
legend(x=3.5, y=14, legends=c("Non-Smoke", "Smoke"), fill=c(4, 2), pch=c(16, 17))
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2))
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], main="LungCap vs Age for Smoke/Non-Smoke", col=4, xlab="Age", ylab="LungCap")
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2))
plot(Age[Smoke="no"], LungCap[Smoke="no"], col=4, xlab="Age", ylab="LungCap", pch=16) # blue solid circle
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16) # blue solid circle
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=2, pch=17) # red triangle
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16) # blue solid circle
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=2, pch=17) # red triangle
legend(x=3.5, y=14, legends=c("Non-Smoke", "Smoke"), fill=c(4, 2), pch=c(16, 17))
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2), pch=c(16, 17))
plot(Age[Smoke="no"], LungCap[Smoke="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke="yes"], LungCap[Smoke="yes"], col=2, pch=17)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=2, pch=17)
legend(x=3.5, y=14, legends=c("Non-Smoke", "Smoke"), fill=c(4, 2), pch=c(16, 17), bty="n") # box type
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), fill=c(4, 2), pch=c(16, 17), bty="n") # box type
plot(Age[Smoke="no"], LungCap[Smoke="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=2, pch=17)
lines(smooth.spline(Age[Smoke="no"], LungCap[Smoke="no"]), col=4)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3)
lines(smooth.spline(Age[Smoke=="yes"], LungCap[Smoke=="yes"]), col=2, lwd=3)
legend(x=3.5), y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3.5), y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=2, pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3)
lines(smooth.spline(Age[Smoke=="yes"], LungCap[Smoke=="yes"]), col=2, lwd=3)
legend(x=3, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n", lwd=3)
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=4, xlab="Age", ylab="LungCap", pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type 2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type 2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type 2는 dashed line
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=4, xlab="Age", ylab="LungCap", pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type 2는 dashed line
line(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type 2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, lwd=3, lty=2) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3, lty=2) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3, lty=1) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3) # line type2는 dashed line
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=4, xlab="Age", ylab="LungCap", pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3) # line type2는 dashed line
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=4, xlab="Age", ylab="LungCap", pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3, lty=2) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3, lty=2) # line type2는 dashed line
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col=4, xlab="Age", ylab="LungCap", pch=16)
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col=4, xlab="Age", ylab="LungCap", pch=17)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="yes"], LungCap[Smoke=="yes"]), col=2, lwd=3)
?lty
help(line type)
help(lty)
lines(smooth.spline(Age[Smoke=="yes"], LungCap[Smoke=="yes"]), col=2, lwd=3, lty=3)
lines(smooth.spline(Age[Smoke=="no"], LungCap[Smoke=="no"]), col=4, lwd=3, lty=2) # line type2는 dashed line
lines(smooth.spline(Age[Smoke=="yes"], LungCap[Smoke=="yes"]), col=2, lwd=3, lty=3)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke), col=c(4, 2), lty=c(2, 3), bty="n", lwd=3)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=c(2, 3), bty="n", lwd=3)
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n") # line type, box type
legend(x=3.5, y=14, legend=c("Non-Smoke", "Smoke"), col=c(4, 2), lty=1, bty="n", lwd=3)
LungCapData <- read.table(file.choose(), header=T, sep="\t")
attach(LungCapData)
names(LungCapData)
class()
help(boxplot)
boxplot(LungCap)
quntile(LungCap, probs=c(0, 0.25, 0.5, 0.75, 1))
quantile(LungCap, probs=c(0, 0.25, 0.5, 0.75, 1))
boxplot(LungCap, main="Boxplot", ylab="Lung Capacity")
boxplot(LungCap, main="Boxplot", ylab="Lung Capacity", ylim=c(o, 16))
boxplot(LungCap, main="Boxplot", ylab="Lung Capacity", ylim=c(0, 16), las=1) # las
boxplot(LungCap ~ Gender) # ~ separate
boxplot(LungCap ~ Age) # ~ separate
boxplot(LungCap ~ Gender) # ~ separate
boxplot(LungCap ~ Gender, main="Boxplot by Gender")
boxplot(LungCap[Gender=="female"], LungCap[Gender=="Male"])
boxplot(LungCap[Gender=="female"], LungCap[Gender=="Male"])
names(LungCapData)
LungCapData <- read.table(file.choose(), header=T, sep="\t")
attach(LungCapData)
names(LungCapData)
names(LungCapData)
Age[1:5]
AgeGroups[1:5]
AgeGroups <- cut(Age, breaks=c(0, 13, 15, 17, 25), labels=c("<13", "14/15", "16/17", "18+"))
Age[1:5]
AgeGroups[1:5]
levels(AgeGroups)
boxplot(LungCap, ylab="LungCapacity", main="Boxplot of LungCap", las=1)
LungCapData <- read.table(file.choose(), header=T, sep="\t")
attach(LungCapData)
names(LungCapData)
help(boxplot)
?boxplot
boxplot(LungCap)
quantile(LungCap, probs=c(0, 0.25, 0.5, 0.75, 1)) # minumum value, first quantile, median, third quartile, maximum value
boxplot(LungCap, main="Boxplot", ylab="Lung Capacity")
boxplot(LungCap, main="Boxplot", ylab="Lung Capacity", ylim=c(o, 16))
boxplot(LungCap[Gender=="female"], LungCap[Gender=="Male"])
a <- 3
b <- 4
a+b
install.packages(swirl)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
help(swirl)
swirl()
a <- 3
b <- 4
a+b
libaray(swirl)
help(swirl)
yes
library(swirl)
x <- 1:10
y <- rnorm(10)
plot(x,y)
x <- 1:10
y <- rnorm(10)
plot(x,y)
fit <- lm(y ~x)
View(LungCapData)
View(LungCapData)
View(LungCapData)
View(LungCapData)
rm(LungCapData)
source('~/.active-rstudio-document')
library(rgl)
example(rgl.surface)
example(rgl.surface)
flour <- c(3, -2, -1, 0, 1, 2)
diet <- c(-4, 1, -3, -5, -2, -8)
total <- c(flour, diet)
hist(total)
View(volcano)
View(y)
View(volcano)
drop(volcano)
plot(density(flour), xlim=c(-8, 8), ylim=c(0, 0.2), lty=1, ann=F)
par(new=T)
plot(density(diet), xlim=c(-8, 8), ylim=c(0, 0.2), lty=2)
legend(4, 0.2, c("밀가루", "다이어트약"), lty=1:2, ncol=1)
legend(4, 0.2, c("밀가루", "다이어트약"), lty=1:2, ncol=1)
legend(4, 0.2, c("밀가루", "다이어트약"), lty=1:2, ncol=1)
legend(4, 0.2, c("flour", "diet"), lty=1:2, ncol=1)
plot(density(flour), xlim=c(-8, 8), ylim=c(0, 0.2), lty=1, ann=F)
par(new=T)
plot(density(diet), xlim=c(-8, 8), ylim=c(0, 0.2), lty=2)
legend(4, 0.2, c("flour", "diet"), lty=1:2, ncol=1)
boxplot(flour, diet, names=c("flour", "diet"))
t.test(diet, mu=0)
t.test(diet, mu=0)
t.test(diet, mu=0, alternative="greater")
t.test(flour, diet, var.equal=T)
id <- c(1, 2, 3, 4, 5)
sex <- c("F", "F", "M", "M", "M")
height <- c(160, 165, 170, 175, 180)
weight <- c(50, 65, 60, 55, 70)
MYDATA <- data.frame(ID=id, SEX=sex, HEIGHT=height, WEIGHT=weight)
MYDATA
?gregmisc
??gremisc
install.packages(gregmisc)
factorial(5)
installed.packages()
library(relimp)
install.packages("relimp")
library(relimp)
showData(LungCapData)
showData(LungCapData[1:10,])
showData(LungCapData[1:100,])
head(LungCapData, 100)
head(LungCapData, 10)
tail(LungCapData, 10)
summary(LungCapData)
plot(LungCapData)
plot(LungCap)
plot(LungCapData, LungCap)
plot(LungCapData$LungCap)
plot(LungCapData$LungCap, LungCapData$Age)
plot(LungCapData$Age, LungCapData$LungCap)
plot(LungCapData$Gender, LungCapData$LungCap)
plot(LungCapData$Gender, LungCapData$LungCap)
apply(LungCapData[, c(2, 3)], 2, mean)
apply(LungCapData[, c(2, 3)], mean)
apply(LungCapData[, c(2, 3)], 2, mean)
apply(LungCapData[, c(1, 3)], 2, mean)
apply(LungCapData[, c(1, 725)], 2, mean)
apply(LungCapData[, c(2, 725)], 2, mean)
apply(LungCapData[, c(1, 725)], 725, mean)
apply(LungCapData[, c(1, 2)], 2, mean)
apply(LungCapData[, c(1, 2)], 3, mean)
apply(LungCapData[, c(1, 6)], 6, mean)
apply(LungCapData[, c(1, 6)], 2, mean)
apply(LungCapData[, c(1, 3)], 2, mean)
apply(LungCapData[, c(1, 3)], 3, mean)
apply(LungCapData[, c(1, 2, 3)], 3, mean)
apply(LungCapData[, c(1, 2, 3)], 2, mean)
apply(LungCapData, mean)
apply(LungCapData, 2, mean)
apply(LungCapData[, c(1, 2, 3)], 2, mean)
apply(LungCapData[LungCap], mean)
apply(LungCapData[LungCap], 2, mean)
apply(LungCapData$LungCap, 2, mean)
apply(LungCapData$LungCap, mean)
LungCapData$Gender
LungCapData$LungCap
names(LungCapData)
row.names(LungCapData)
col.names(LungCapData)
ncol(LungCapData)
nrow(LungCapData)
subset(LungCapData, Age > 10)
subset(LungCapData, Age > 15)
subset(LungCapData, Age > 18)
count(subset(LungCapData, Age > 18))
library(ggplot2)
data(mpg)
mpg
head(mpg, 10)
tail(mpg, 10)
plot(mpg$manufacturer)
plot(mpg$year)
plot(mpg$manufacturer, mpg$hwy)
plot(mpg$hwy, mpg$year)
attach(mpg)
plot(mpg)
year
names(mpg)
class
plot(class)
plot(mpg$class)
scatter.smooth(mpg$class)
search()
?lm
result <- lm(Age ~ LungCap)
abline(result)
lm(LungCapData)
lm(LungCapData)
var.test(LungCapData$LungCap, LungCapData$Age)
var.test(LungCapData$LungCap)
var.test(LungCapData$LungCap,)
attach(LungCapData)
LungCap
plot(LungCap)
plot(LungCap, Age)
plot(Age, LungCap)
plot(density(LungCap))
LungCap
LungCap, 10
head(LungCap, n=10)
head(LungCap, n=100)
hist(LungCapData)
hist(LungCap)
hist(LungCap, Age)
hist(LungCap)
boxplot(LungCap)
t.test(LungCap, mu=10)
t.test(LungCap, mu=5)
head(LungCapData, 10)
t.test(LungCap, Age, var.equal=T)
str(LungCap)
str(Age)
mode(Age)
list(sequence=1:5, "letters"="abc")
ncol(LungCapData)
nrow(LungCapData)
dnorm(0)
rnorm(5)
curve(dnorm, -4, 4, type="1")
curve(dnorm, -4, 4)
head(LungCapData)
apply(LungCapData$LungCap, LungCapData$Age, summary)
tapply(LungCapData$LungCap, LungCapData$Age, summary)
tapply(LungCapData$LungCap, LungCapData$Gender, summary)
mean(Age)
colMeans(Age)
colMeans(LungCapData$Age)
by(LungCapData[,-2], LungCapData$Gender, mean)
by(LungCapData$Gender, mean)
by(LungCapData$LungCap, LungCapData$Age, mean)
by(LungCapData$LungCap, LungCapData$Gender, mean)
t.test(female, male, var.equal=T)
t.test(LungCapData$Gender$female, LungCapData$Gender$male, var.equal=T)
t.test(LungCapData[Gender$female], LungCapData[Gender$male], var.equal=T)
t.test(LungCapData[Gender[female]], LungCapData[Gender[male]], var.equal=T)
by(LungCapData$LungCap, LungCapData$Gender, summary)
xtabs(~Gender, data=x)
xtabs(~Gender, data=LungCapData)
table(LungCapData$Gender)
xtabs(~Gender)
xtabs(~Age, ~Gender)
xtabs(~Age+Gender)
table(LungCapData$Age, LungCapData$Gender)
AgePlotGender <- table(LungCapData$Age, LungCapData$Gender)
plot(AgePlotGender)
table(LungCapData$Age, LungCapData$Gender$female)
table(LungCapData$Age, LungCapData$Gender)
xtabs(~Age+Gender)
y <- xtabs(~Age+Gender)
prop.table(y, margin = 1)
barplot(y)
y <- xtabs(~Age+Gender)
barplot(y)
z <- prop.table(y, margin = 1)
barplot(z)
stem(LungCapData$Age)
stem(LungCapData$LungCap)
barplot(Age)
barplot(LungCapData$Age)
plot(Age)
plot(LungCap~Age)
hist(Age)
plot(density(Age))
plot(density(LungCap~Gender))
plot(density(LungCap~Gender))
plot(density(LungCap))
installed.packages('foreign')
tess <- read.spss(file = "/Users/kimjongha/Downloads/example_data/TESS2_089_Trawalter_Client.sav", use.value.labels = FALSE, to.data.frame = TRUE)
tess <- read.spss(file = choose(), use.value.labels = FALSE, to.data.frame = TRUE)
tess <- read.spss(file = choose(), use.value.labels = FALSE, to.data.frame = TRUE)
getwd()
tess <- read.spss(file = "C:/Users/kimjongha/Downloads/example_data/TESS2_089_Trawalter_Client.sav", use.value.labels = FALSE, to.data.frame = TRUE)
rm(tess)
rm(LungCapData)
library(foreign)
tess <- read.spss(file = "C:/Users/kimjongha/Downloads/example_data/TESS2_089_Trawalter_Client.sav", use.value.labels = FALSE, to.data.frame = TRUE)
library(haven)
dataset <- read_sav(NULL)
View(dataset)
t.test(tess$XIDEO, mu = 4)
tess <- read.csv("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv", sep = ",", header = TRUE)
tess <- read.url("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv", sep = ",", header = TRUE)
rm(LungCapData)
system.time(t.test(tess$XIDEO, mu = 4))
system.time(getwd())
tess <- RCurl::getURL("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv", sep = ",", header = TRUE)
??RCurl
installed.packages(RCurl)
install.packages("RCurl")
library(RCurl)
library(RCurl)
tess <- RCurl::getURL("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv", sep = ",", header = TRUE)
tess <- RCurl::getURL("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv")
tess <- "https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv"
loda(url(tess))
class(tess)
load(url(tess))
githubURL <- "https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv"
load(url(githubURL))
tess <- getURL("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv")
tess <- read.csv(text = getURL("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv"))
view(tess)
views(tess)
tess
class(tess)
rm(githubURL)
View(tess)
urlfile <- "https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv"
tess <- read.csv(urlfile)
urlfile <- 'https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv'
tess <- read.csv(urlfile)
tess <- read.csv(urlfile)
library(readr)
rm(tess)
rm(urlfile)
tess <- read_csv("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv")
library(curl)
intalled.packages("curl")
install.packages("curl")
install.packages("curl")
library(curl)
tess <- read.csv(curl("https://github.com/kimjh2807/rstudio/dataset/TESS2_089_Trawalter_Client.csv"))
tess <- read.csv(curl("https://github.com/kimjh2807/rstudio/blob/master/dataset/TESS2_089_Trawalter_Client.csv"))
library(curl)
class(tess)
str(tess)
names(tess)
summary(tess)
view(tess)
View(tess)
rm(tess)
install.packages("rio")
library(rio)
tess <- import("https://github.com/kimjh2807/rstudio/blob/master/dataset/TESS2_089_Trawalter_Client.csv")
rm(tess)
tess <- read.csv(text = getURL("https://github.com/kimjh2807/rstudio/blob/master/dataset/TESS2_089_Trawalter_Client.csv"), skip = 7, header = T)
library(RCurl)
tess <- read.csv(text = getURL("https://github.com/kimjh2807/rstudio/blob/master/dataset/TESS2_089_Trawalter_Client.csv"), skip = 7, header = T)
rm(LungCapData)
# Chi-square
# data = pew
pew <- read.csv("dataset/February_2012_csv.csv", sep = ",", header = TRUE)
# Pearson's r
getwd()
# Pearson's r
getwd()
# Pearson's r
setwd("/Users/kimjongha/Documents/rstudio")
# Pearson's r
setwd("/Users/kimjongha/Documents/github/rstudio")
pew <- read.csv("dataset/February_2012_csv.csv", sep = ",", header = TRUE)
head(pew)
str(pew)
pew$q2
table(pew$q2, useNA = "always")
plot(pew$q2)
table(pew$educ, useNA = "always")
plot(pew$educ)
pew$q2r <- pew$q2
pew$educr <- pew$educ
pew$q2r[pew$q2 == 98 | pew$q2 == 99] <- NA
pew$q2r[pew$q2 == 98 | pew$q2 == 99] <- NA
pew$educr[pew$educ == 8 | pew$educ == 9] <- NA
hist(pew$q2r)
hist(pew$educr)
hist(pew$q2r)
pew$log.q2r <- log((pew$q2r+1), 10)
plot(pew$educr, pew$log.q2r, type = 'p')
cor.test(pew$educr, pew$log.q2r, method = 'pearson')
cor.test(pew$educr, pew$log.q2r, method = 'spearman')
cor.test(pew$educr, pew$log.q2r, method = 'kendall')
cor.test(pew$educr, pew$log.q2r, method = 'spearman')
cor.test(pew$educr, pew$log.q2r, method = 'kendall')
install.packages("hexbin")
library(hexbin)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 6)
plot(hex.plot)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 10)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 100)
plot(hex.plot)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 50)
plot(hex.plot)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 30)
plot(hex.plot)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 80)
plot(hex.plot)
hex.plot <- hexbin(pew$educr, pew$log.q2r, xbins = 6)
plot(hex.plot)
load("~/Documents/github/rstudio/.RData")
